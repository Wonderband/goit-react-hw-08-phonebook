{"version":3,"file":"static/js/830.03c4bccf.chunk.js","mappings":"wNACA,EAAwB,2BAAxB,EAA2D,2BAA3D,EAAuG,oC,SCG1FA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,kBAAMC,UAAWC,EAAoBC,SAVlB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAa,CACjBC,KAAMH,EAAEI,OAAOD,KAAKE,MAAMC,OAC1BC,OAAQP,EAAEI,OAAOG,OAAOF,MAAMC,QAEhCX,GAASa,EAAAA,EAAAA,IAAWN,GAErB,EAEC,WACE,mBAAOL,UAAWC,EAAlB,mBAEE,kBACEW,KAAK,OACLN,KAAK,OACLN,UAAWC,EACXY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOf,UAAWC,EAAlB,oBAEE,kBACEW,KAAK,MACLN,KAAK,SACLN,UAAWC,EACXY,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAAb,4BAGL,E,SCzCD,EAAyB,yBAAzB,EAAiE,+BCKpDI,EAAW,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIX,EAAmB,EAAnBA,KAAMI,EAAa,EAAbA,OAC7BZ,GAAWC,EAAAA,EAAAA,MACjB,OACE,gBAAIC,UAAWC,EAAf,UACGK,EADH,MACYI,GACV,mBACEV,UAAWC,EACXW,KAAK,SACLM,QAAS,kBAAMpB,GAASqB,EAAAA,EAAAA,IAAcF,GAA7B,EAHX,sBASL,E,kBCnBD,EAAuB,2BCOVG,EAAc,WACzB,IAAQC,GAAkBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAV,IAAnCH,cACFI,GAASH,EAAAA,EAAAA,IAAYI,EAAAA,IACrB5B,GAAWC,EAAAA,EAAAA,MAIjB,OAHA4B,EAAAA,EAAAA,YAAU,WACR7B,GAAS8B,EAAAA,EAAAA,MACV,GAAE,CAAC9B,KAEF,gBAAIE,UAAWC,EAAf,WACE,0CACCoB,EACEI,QAAO,SAAAI,GAAI,OAAIA,EAAKvB,KAAKwB,cAAcC,SAASN,EAArC,IACXO,KAAI,SAAAH,GACH,OACE,SAACb,EAAD,CAEEC,GAAIY,EAAKZ,GACTX,KAAMuB,EAAKvB,KACXI,OAAQmB,EAAKnB,QAHRmB,EAAKZ,GAMf,IACuB,IAAzBI,EAAcY,SAAgB,mDAGpC,E,SChCD,GAAgB,aAAe,6BAA6B,YAAc,6BCK7DC,EAAS,WACpB,IAAMpC,GAAWC,EAAAA,EAAAA,MACX0B,GAASH,EAAAA,EAAAA,IAAYI,EAAAA,IAI3B,OACE,iBAAK1B,UAAWC,EAAAA,aAAhB,WACE,SAACmB,EAAD,KAGA,mBAAOpB,UAAWC,EAAAA,YAAlB,oCAEE,kBACEW,KAAK,OACLN,KAAK,SACLN,UAAWC,EAAAA,MACXa,MAAM,iBACNN,MAAOiB,EACPU,SAhBa,SAAAhC,GACnBL,GAASsC,EAAAA,EAAAA,IAAUjC,EAAEI,OAAOC,MAAMsB,cAAcrB,QACjD,SAmBF,ECXD,EAbqB,WACnB,OACE,UAAC4B,EAAA,EAAD,YACE,SAAC,KAAD,WACE,2CAEF,SAACxC,EAAD,KACA,SAACqC,EAAD,MAIL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"addContactForm\":\"ContactForm_addContactForm__RJQC6\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name: e.target.name.value.trim(),\n      number: e.target.number.value.trim(),\n    };\n    dispatch(addContact(newContact));\n    // e.target.reset();\n  };\n  return (\n    <form className={css.addContactForm} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={css.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Phone:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={css.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact!</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"liFlex\":\"ListItem_liFlex__P+3M5\",\"deleteButton\":\"ListItem_deleteButton__oC0i+\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport css from './ListItem.module.css';\n\nexport const ListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.liFlex}>\n      {name} : {number}\n      <button\n        className={css.deleteButton}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","import { ListItem } from 'components/ListItem/ListItem';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectFilter } from 'redux/selectors';\nimport css from './ContactsList.module.css';\n\nexport const ContactList = () => {\n  const { contactsArray } = useSelector(state => state.contacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <ul className={css.list}>\n      <h2>My contacts: </h2>\n      {contactsArray\n        .filter(item => item.name.toLowerCase().includes(filter))\n        .map(item => {\n          return (\n            <ListItem\n              key={item.id}\n              id={item.id}\n              name={item.name}\n              number={item.number}\n            />\n          );\n        })}\n      {contactsArray.length === 0 && <p>You have no contacts!</p>}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsHead\":\"Filter_contactsHead__lztdd\",\"labelFilter\":\"Filter_labelFilter__7SBy1\"};","import { ContactList } from 'components/ContactsList/ContactsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const filterHandle = e => {\n    dispatch(setFilter(e.target.value.toLowerCase().trim()));\n  };\n  return (\n    <div className={css.contactsHead}>\n      <ContactList />\n      {/* <p></p> */}\n\n      <label className={css.labelFilter}>\n        Find contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          className={css.input}\n          title=\"Find the name!\"\n          value={filter}\n          onChange={filterHandle}\n        />\n      </label>\n    </div>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Helmet } from 'react-helmet-async';\nimport { Filter } from 'components/Filter/Filter';\n// import { ContactList } from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\n  return (\n    <Section>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      {/* <ContactList /> */}\n    </Section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","newContact","name","target","value","trim","number","addContact","type","pattern","title","required","ListItem","id","onClick","deleteContact","ContactList","contactsArray","useSelector","state","contacts","filter","selectFilter","useEffect","fetchContacts","item","toLowerCase","includes","map","length","Filter","onChange","setFilter","Section"],"sourceRoot":""}